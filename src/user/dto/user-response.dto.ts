import { Exclude, Expose } from 'class-transformer';

@Exclude() // Исключаем поле пароля
export class UserResponseDto {
  @Expose()
  email: string;

  @Expose()
  phoneNumber: string;

  @Expose()
  name: string;

  constructor(partial: Partial<UserResponseDto>) {
    Object.assign(this, partial);
  }
}

/* @Exclude(): Это декоратор из библиотеки class-transformer, который указывает на то, что все поля класса должны быть исключены из сериализации (преобразования объекта в другой формат, например, JSON) по умолчанию.

@Expose(): Этот декоратор указывает на то, что поля, помеченные этим декоратором, должны быть включены в процесс сериализации.

email, phoneNumber, name: Это свойства класса UserResponseDto, которые мы хотим включить в ответ, исключив при этом другие свойства, такие как пароль.

constructor: Это конструктор класса, который принимает объект типа Partial<UserResponseDto>. Partial<T> означает, что все свойства в объекте могут быть необязательными. Внутри конструктора используется Object.assign, чтобы скопировать свойства из переданного объекта в экземпляр класса.

Таким образом, UserResponseDto будет содержать только те свойства пользователя, которые были явно помечены декораторами @Expose(), и не будет содержать чувствительную информацию, такую как пароль, из-за декоратора @Exclude() */
